name: Reset to Base

on:
  workflow_dispatch:  # Ejecuta manualmente desde Actions

jobs:
  reset:
    name: Clean migrated files and preserve base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Warning
        run: |
          echo "⚠️ Este flujo borrará TODO lo migrado y dejará SOLO la base:"
          echo "   - src/app.js"
          echo "   - src/server.js"
          echo "   - README.md"
          echo "   - .github/workflows/run-and-check.yml"
          echo "   - .github/workflows/reset-to-base.yml"
          echo "   - package.json"
          echo "   - package-lock.json"
          sleep 3

      - name: Plan deletions (preview)
        id: plan
        run: |
          set -e

          # Top-level a borrar (todo excepto .git, .github, src, README.md, package.json, package-lock.json)
          find . -mindepth 1 -maxdepth 1 \
            ! -path './.git' \
            ! -path './.github' \
            ! -name 'src' \
            ! -name 'README.md' \
            ! -name 'package.json' \
            ! -name 'package-lock.json' \
            -print | sort > /tmp/delete_top.txt || true

          # Dentro de src: borrar todo excepto app.js y server.js
          if [ -d src ]; then
            find src -mindepth 1 -type f \
              ! -name 'app.js' \
              ! -name 'server.js' \
              -print | sort > /tmp/delete_src_files.txt || true

            find src -mindepth 1 -type d -print | sort > /tmp/delete_src_dirs.txt || true
          else
            : > /tmp/delete_src_files.txt
            : > /tmp/delete_src_dirs.txt
          fi

          echo "== Top-level que se borrará =="
          cat /tmp/delete_top.txt || true
          echo
          echo "== Archivos en src/ que se borrarán =="
          cat /tmp/delete_src_files.txt || true
          echo
          echo "== Carpetas en src/ que se borrarán =="
          cat /tmp/delete_src_dirs.txt || true

          DELETED_COUNT=$( (cat /tmp/delete_top.txt /tmp/delete_src_files.txt /tmp/delete_src_dirs.txt 2>/dev/null || true) | wc -l | tr -d ' ')
          echo "deleted_count=${DELETED_COUNT}" >> "$GITHUB_OUTPUT"

      - name: Remove migrated folders and files
        run: |
          set -e
          echo "🧹 Eliminando archivos y carpetas migradas…"
          if [ -s /tmp/delete_top.txt ]; then xargs -r rm -rf < /tmp/delete_top.txt; fi
          if [ -s /tmp/delete_src_files.txt ]; then xargs -r rm -f < /tmp/delete_src_files.txt; fi
          if [ -s /tmp/delete_src_dirs.txt ]; then tac /tmp/delete_src_dirs.txt | xargs -r rm -rf; fi
          echo "✅ Migraciones eliminadas. Base preservada intacta."

      - name: Verify essential files exist
        run: |
          echo "🔍 Verificando archivos esenciales…"
          REQUIRED_FILES=(
            "src/app.js"
            "src/server.js"
            "README.md"
            ".github/workflows/run-and-check.yml"
            ".github/workflows/reset-to-base.yml"
            "package.json"
            "package-lock.json"
          )
          for f in "${REQUIRED_FILES[@]}"; do
            if [ ! -f "$f" ]; then
              echo "::error::Falta el archivo esencial: $f"
              exit 1
            fi
          done
          echo "✅ Todos los archivos esenciales están presentes."

      - name: Commit and push cleanup
        run: |
          git config user.name "Reset Bot"
          git config user.email "bot@example.com"
          git add -A
          git commit -m "Reset to base (keep only core files) [skip ci]" || echo "No changes to commit"
          git push

      - name: Summary
        run: |
          echo "🚀 Limpieza completada."
          echo "Se eliminaron ${{ steps.plan.outputs.deleted_count }} entradas."
          echo "Se preservaron:"
          echo " - src/app.js"
          echo " - src/server.js"
          echo " - README.md"
          echo " - .github/workflows/run-and-check.yml"
          echo " - .github/workflows/reset-to-base.yml"
          echo " - package.json"
          echo " - package-lock.json"
